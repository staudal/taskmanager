datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String @id @default(cuid())
  email String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  role String @default("user") // "user", "admin"
  password   Password?
  tasks      Task[]       // Tasks created by this user
  taskAccess TaskAccess[] // Tasks this user has access to
  auditLogs  AuditLog[]   // Audit logs associated with this user
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model TaskAccess {
  id          String   @id @default(cuid())
  accessLevel String   @default("viewer") // "viewer", "editor"
  grantedAt   DateTime @default(now())

  task   Task   @relation(fields: [taskId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  taskId String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String

  @@unique([taskId, userId])
}

model Task {
  id     String  @id @default(cuid())
  title  String
  body   String?
  color  String? @default("bg-white")
  status String  @default("todo") // allowed: 'todo', 'in_progress', 'done'

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String

  // Users who have access to this task
  accessUsers TaskAccess[]
}

model AuditLog {
  id        String   @id @default(cuid())
  action    String   // 'login', 'signup', 'logout', etc.
  status    String   // 'success', 'failure'
  ipAddress String?
  userAgent String?
  details   String?  // JSON string for additional details
  createdAt DateTime @default(now())

  // Optional relation to User - can be null for failed logins with non-existent accounts
  user      User?    @relation(fields: [userId], references: [id], onDelete: SetNull)
  userId    String?
}
